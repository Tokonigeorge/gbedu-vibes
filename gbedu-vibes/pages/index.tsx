/* eslint-disable @next/next/no-img-element */
import React, { ContextType, useEffect } from "react";
import type { NextPage } from "next";
import Head from "next/head";
import Nav from "../components/Nav";
import Header from "../components/loginPage/Header";
import Login from "../components/loginPage/Login";
import { getToken } from "../utils/spotify-auth";
import SpotifyWebApi from "spotify-web-api-js";
import { useDataContextVal } from "../context/dataContext";
import { updateUserData } from "../context/actions";
import MoodHome from "../components/MoodHome";
import Layout from "../components/Layout";

const spotifyWeb = new SpotifyWebApi();

const Home: NextPage = () => {
  const [{ user }, dispatch] = useDataContextVal();
  //if token is present go ahead and setAccestoken, else call setToken
  const getUser = () => {
    let token = localStorage.getItem("token");
    if (!token) {
      return setToken();
    }

    spotifyWeb.setAccessToken(token);

    //after setting the accesstoken for aouth, get user
    spotifyWeb.getMe().then((user) => dispatch(updateUserData(user)));
    //add error catch incase user can't be found as a popup?
    //maybe also add dependency to the useeffect
  };

  const setToken = () => {
    //get object containing the acesstoken
    const _hash = getToken();
    //set the hash of the window to ""
    window.location.hash = "";
    const _token: string = _hash.access_token;
    // const token: string =
    // "BQBRSpx68BdhJXD3eCDFcAux4x_KJWrz_xN6w1BUf05_dQBr41r2ZSKRF4B_WQ1OSWvCNnaMsdIyxQB7TuziO8eHflTp9Vxc_1Gevgpq3o46lJJqHsQgtGDdAmZlhGMURuQDOaqshw6ZzyNCheCCI5vW98wlK4CQ8lYpwO0REaNaLo";
    localStorage.setItem("token", _token);
    //call getUser after setting
    getUser();
  };

  useEffect(() => {
    /*get token from localstorage
    if present, call getUser, otherwise call getToken(and set to localstorage here)
    */
    getUser();
  }, []);

  return (
    <div>
      <Head>
        <title>Gbedu Vibes</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/conga.svg" />
      </Head>

      <main className="">
        <Layout>
          <div className="pt-6 px-6 md:px-20 sm:px-12">
            <Nav showTeam={true} />
            {user?.display_name ? (
              <MoodHome />
            ) : (
              <>
                <Header />
                <div className="flex items-center justify-center pt-8">
                  <Login />
                </div>
              </>
            )}
          </div>
        </Layout>
      </main>
    </div>
  );
};

export default Home;
